@using SchoolProject.Web.Data.EntitiesOthers
@inject SignInManager<User> SignInManager


@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}


<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.IndexNavClass(viewContext: ViewContext)" id="profile" asp-page="./Index">Profile</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.EmailNavClass(viewContext: ViewContext)" id="email" asp-page="./Email">Email</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(viewContext: ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a>
    </li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item">
            <a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(viewContext: ViewContext)" asp-page="./ExternalLogins">External logins</a>
        </li>
    }
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(viewContext: ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.PersonalDataNavClass(viewContext: ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a>
    </li>
</ul>