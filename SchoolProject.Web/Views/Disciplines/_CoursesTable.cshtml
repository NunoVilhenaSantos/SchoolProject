@using System.Reflection
@using Microsoft.AspNetCore.Identity
@using SchoolProject.Web.Data.Entities.Courses
@using SchoolProject.Web.Data.Entities.Disciplines
@using SchoolProject.Web.Data.Entities.Users

@inject RoleManager<IdentityRole> RoleManager
@inject UserManager<AppUser> UserManager

@model SchoolProject.Web.Data.Entities.Disciplines.Discipline

@{
    // ViewData["Title"] = "Index";
    // ViewData["Title"] = "Owners List";
    // ViewData["Title"] = @ViewContext.RouteData.Values["controller"] + " - " + @ViewContext.RouteData.Values["action"];
    ViewData["Title"] = ViewContext.RouteData.Values["controller"] + " List";

    var actionName = ViewContext.RouteData.Values["action"]?.ToString() ?? string.Empty;
    var controllerName = ViewContext.RouteData.Values["controller"]?.ToString() ?? string.Empty;
    var assemblyName = Assembly.GetExecutingAssembly().GetName().Name ?? string.Empty;

    // Isso obtém o nome da classe do modelo atual
    var deleteClassName = ViewData["CurrentClass"]?.ToString() ?? string.Empty;
    var pageTitle = actionName + " - " + controllerName + " - " + assemblyName + " " + ViewData["vAssemblyVersion"];
}

<br/>
<h4>Courses</h4>
@if (Model.Courses == null && !Model.Courses.Any())
{
    <h5>No @nameof(Course) added yet to this @nameof(Discipline) | @Model.Code - @Model.Name</h5>
}
else
{
    <table class="table table-hover" sortable="True" id="sortableTable">
        <thead>
        <tr>
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().ProfilePhotoId)</th> *@
            <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().Code) </th>
            <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().Acronym)</th>
            <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().Name)</th>
            <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().QnqLevel)</th>
            <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().EqfLevel)</th>
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().StartDate)</th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().EndDate)</th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().StartHour)</th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().EndHour)</th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().Location)</th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().Type) </th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().Area) </th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().PriceForEmployed)</th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().PriceForUnemployed) </th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().IdGuid)</th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().WasDeleted)</th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().CreatedAt) </th> *@
            @* <th>@Html.DisplayNameFor(model => model.Courses.FirstOrDefault().UpdatedAt) </th> *@
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Courses.OrderBy(c => c.Code))
        {
            <tr>
                @* <td> *@
                @*     <img alt="Image" class="img-thumbnail" height="100" src="@Url.Content(item.ProfilePhotoIdUrl)" width="100"/> *@
                @* </td> *@
                <td>@Html.DisplayFor(modelItem => item.Code)</td>
                <td>@Html.DisplayFor(modelItem => item.Acronym)</td>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.QnqLevel)</td>
                <td>@Html.DisplayFor(modelItem => item.EqfLevel)</td>
                @* <td>@Html.DisplayFor(modelItem => item.StartDate)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.EndDate)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.StartHour) </td> *@
                @* <td>@Html.DisplayFor(modelItem => item.EndHour)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.Location)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.Type)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.Area)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.PriceForEmployed)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.PriceForUnemployed) </td> *@
                @* <td>@Html.DisplayFor(modelItem => item.IdGuid)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.WasDeleted)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td> *@
                @* <td>@Html.DisplayFor(modelItem => item.UpdatedAt)</td> *@
                <td>
                    <div class="btn-group" role="group" aria-label="Basic outlined example">
                        <a asp-controller="Courses" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning"> <span class="fa-regular fa-pen-to-square"></span> Edit </a>
                        <a asp-controller="Courses" asp-action="Details" asp-route-id="@item.Id" class="btn btn-info"> <span class="fa-regular fa-file"></span> Details </a>
                        <a asp-controller="Courses" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger" data-bs-target="#deleteButton" data-bs-toggle="modal" data-del-action="Delete" data-del-class="@deleteClassName" data-del-controller="@controllerName" data-del-item-id="@item.Id" data-del-item-name="@item.Name" id="btnDelete" type="button"><span class="fa-regular fa-trash-can"></span> Delete </a>
                    </div>
                </td>
            </tr>
        }
        </tbody>
        <tfoot>
        <tr>
            <td></td>
            <td>Total Lines:</td>
            <td>@Model.Courses.Count().ToString("N")</td>
            <td>@Model.Courses.Sum(e => e.WorkHourLoad).ToString()</td>
            <td>@Model.Courses.Sum(e => e.CourseCredits)</td>
            <td></td>
        </tr>
        </tfoot>
    </table>
}