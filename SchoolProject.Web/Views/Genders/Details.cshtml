@using System.Reflection
@model             SchoolProject.Web.Data.Entities.Genders.Gender
@* @model IEnumerable<SchoolProject.Web.Data.Entities.Genders.Gender> *@
@* @model PaginationViewModel<SchoolProject.Web.Data.Entities.Genders.Gender> *@


@{
    ViewData["AssemblyName"] = Assembly.GetExecutingAssembly().GetName().Name;
    ViewData["AssemblyFullName"] = Assembly.GetExecutingAssembly().GetName().FullName;
    ViewData["AssemblyVersion"] = Assembly.GetExecutingAssembly().GetName().Version;
    ViewData["vAssemblyVersion"] = "v" + Assembly.GetExecutingAssembly().GetName().Version;

    var actionName = ViewContext.RouteData.Values["action"]?.ToString() ?? string.Empty;
    ViewData["actionName"] = actionName;

    var controllerName = ViewContext.RouteData.Values["controller"]?.ToString() ?? string.Empty;
    ViewData["controllerName"] = controllerName;

    var assemblyName = Assembly.GetExecutingAssembly().GetName().Name;
    ViewData["assemblyName"] = assemblyName;

    // var pageTitle = actionName + " - " + controllerName + " - " + assemblyName ;
    var pageTitle = actionName + " - " + controllerName + " - " + assemblyName + " " + ViewData["vAssemblyVersion"];

    ViewData["pageTitle"] = pageTitle;
    ViewData["Title"] = "Create";
    // ViewData["Title"] = "Edit";
}

<h2>@actionName</h2>

<h4>@controllerName</h4>

<hr />
@* <div class="row"> *@
@* <div class="col-md-4 offset-md-4"> *@

@* <div class="container-fluid"> *@
<div class="row">
    @* <div class="container-md"> *@

    <partial name="_DisplayImages" />

    <div class="col">

        <partial name="_GendersDD" for="@Model" />

        <div class="form-group">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning"><i class="fa-regular fa-pen-to-square"></i> Edit</a>
            <a asp-action="Index" class="btn btn-success"><i class="fa-solid fa-rotate-left"></i> Back to List</a>
        </div>

    </div>

</div>