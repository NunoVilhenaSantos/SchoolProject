@using System.Reflection
@model IEnumerable<SchoolProject.Web.Data.Entities.OtherEntities.Gender>

@{
    // ViewData["Title"] = "Index";
    // ViewData["Title"] = "Owners List";
    // ViewData["Title"] = @ViewContext.RouteData.Values["controller"] + " - " + @ViewContext.RouteData.Values["action"];
    ViewData["Title"] = ViewContext.RouteData.Values["controller"] + " List";

    var actionName = ViewContext.RouteData.Values["action"]?.ToString();
    var controllerName = ViewContext.RouteData.Values["controller"]?.ToString();
    var assemblyName = Assembly.GetExecutingAssembly().GetName().Name;

    // Isso obtém o nome da classe do modelo atual
    // var modelName = Model.GetModelName(m => m);
    var deleteClassName = Model.GetType().FullName;

    var pageTitle = actionName + " - " + controllerName + " - " + assemblyName;
}

@* <h2>@pageTitle</h2> *@
<h2>@ViewData["Title"]</h2>

<p>
    @* <a asp-action="Create" class="btn btn-secondary p-2"><span class="fa-regular fa-square-plus fa-xl p-1 pe-1"></span> Create New </a> *@
    <a asp-action="Create" class="btn btn-secondary p-2"><span class="fa-solid fa-circle-plus fa-xl p-1 pe-1"></span> Create New </a>
</p>

@* <section class="py-5 text-center container"> *@
@*     <div class="row py-lg-5"> *@
@*         <div class="col-lg-6 col-md-8 mx-auto"> *@
@*             <h1 class="fw-light">Album example</h1> *@
@*             <p class="lead text-body-secondary"> *@
@*                 Something short and leading about the collection below—its contents, *@
@*                 the creator, etc. Make it short and sweet, but not too short so folks don’t simply skip over it *@
@*                 entirely. *@
@*             </p> *@
@*             <p> *@
@*                 <a href="#" class="btn btn-primary my-2">Main call to action</a> *@
@*                 <a href="#" class="btn btn-secondary my-2">Secondary action</a> *@
@*             </p> *@
@*         </div> *@
@*     </div> *@
@* </section> *@

<div class="album py-5 bg-body-tertiary">
    <div class="container-fluid">
        <div class="row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2 row-cols-xl-3 row-cols-xxl-5 g-3">
            @foreach (var item in Model)
            {
                <div class="col">
                    @* <div class="card shadow-sm"> *@
                    <div class="card shadow-sm">
                        <div class="card-img-top">
                            <img src="@item.ProfilePhotoIdUrl" alt="Profile Photo" class="img-fluid">
                        </div>

                        <div class="card-body">
                            <p class="card-text">@Html.DisplayFor(modelItem => item.Name)</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="btn-group">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning"> <span class="fa-regular fa-pen-to-square"></span> Edit </a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info"> <span class="fa-regular fa-file"></span> Details </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger" data-bs-target="#deleteButton" data-bs-toggle="modal" data-del-action="Delete" data-del-class="@deleteClassName" data-del-controller="@controllerName" data-del-item-id="@item.Id" data-del-item-name="@item.Name" id="btnDelete" type="button"><span class="fa-regular fa-trash-can"></span> Delete </a>
                                </div>
                                <small class="text-body-secondary">
                                    @Html.DisplayNameFor(modelItem => item.Id)<br/>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </small>
                                <small class="text-body-secondary">
                                    @Html.DisplayNameFor(modelItem => item.IdGuid)<br/>
                                    @Html.DisplayFor(modelItem => item.IdGuid)
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>