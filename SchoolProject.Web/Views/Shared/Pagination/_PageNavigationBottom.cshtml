@{
    // string? controllerName = ViewData["ControllerName"] as string;
    var controllerName = ViewContext.RouteData.Values["controller"]?.ToString();
}

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-end">

        @* <!-- First page link --> *@
        <li class="page-item @if (Model.PageNumber == 1) { <text>disabled</text> }">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">First</a>
        </li>
        <li class="page-item @if (Model.PageNumber == 1) { <text>disabled</text> }">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Previous</a>
        </li>

        <!-- Page links -->
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            @* <!-- Display first page --> *@
            @if (i == 1)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = i, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">@i</a>
                </li>
            }

            @* <!-- Display last page --> *@
            else if (i == Model.TotalPages)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = i, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">@i</a>
                </li>
            }

            @* <!-- Display up to 2 pages before and after current page --> *@
            else if ((i >= Model.PageNumber - 2 && i <= Model.PageNumber + 2) || i == Model.TotalPages)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = i, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">@i</a>
                </li>
            }

            @* <!-- Display "..." when there are more pages --> *@
            else if ((i == Model.PageNumber - 3 || i == Model.PageNumber + 3) && Model.TotalPages > 7)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">...</a>
                </li>
            }
        }

        <!-- Next page link -->
        <li class="page-item @if (Model.PageNumber == Model.TotalPages) { <text>disabled</text> }">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Next</a>
        </li>
        <li class="page-item @if (Model.PageNumber == Model.TotalPages) { <text>disabled</text> }">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.TotalPages, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Last</a>
        </li>

    </ul>
</nav>


<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-end">

        <!-- First page link -->
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">First</a>
        </li>
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Previous</a>
        </li>

        <!-- Page links -->
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = i, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">@i</a>
            </li>
        }

        <!-- Next page link -->
        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Next</a>
        </li>
        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.TotalPages, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Last</a>
        </li>

    </ul>
</nav>


@* <nav aria-label="Page navigation example"> *@
@*     <ul class="pagination justify-content-end"> *@
@*         <li class="page-item disabled"> *@
@*             <a class="page-link">Previous</a> *@
@*         </li> *@
@*         <li class="page-item"> *@
@*             <a class="page-link" href="#">1</a> *@
@*         </li> *@
@*         <li class="page-item"> *@
@*             <a class="page-link" href="#">2</a> *@
@*         </li> *@
@*         <li class="page-item"> *@
@*             <a class="page-link" href="#">3</a> *@
@*         </li> *@
@*         <li class="page-item"> *@
@*             <a class="page-link" href="#">Next</a> *@
@*         </li> *@
@*     </ul> *@
@* </nav> *@


<script src="~/js/pagination.js" charset="utf-8"></script>

@* <script src="~/ts/pagination.ts" charset="utf-8"></script> *@