@{
    // string? controllerName = ViewData["ControllerName"] as string;
    var controllerName = ViewContext.RouteData.Values["controller"]?.ToString();
}

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-end">

        @* <!-- First page and Previous page link --> *@
        <li class="page-item @if (Model.PageNumber == 1) { <text>disabled</text> }">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">First</a>
        </li>
        <li class="page-item @if (Model.PageNumber == 1) { <text>disabled</text> }">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Previous</a>
        </li>


        <!-- Page numbers links -->
        @{
            var totalPages = Model.TotalPages;
            var currentPage = Model.PageNumber;
            const int pageRange = 3; // Number of pages to display before and after the current page

            for (var i = 1; i <= totalPages; i++)
            {
                if (i == 1 || i == totalPages || (i >= currentPage - pageRange && i <= currentPage + pageRange))
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = i, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">@i</a>
                    </li>
                }
                else if ((i == currentPage - (pageRange + 1) && currentPage > pageRange + 1) || (i == currentPage + (pageRange + 1) && currentPage < totalPages - pageRange - 1))
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
            }
        }


        <!-- Next page and last page link -->
        <li class="page-item @if (Model.PageNumber == Model.TotalPages) { <text>disabled</text> }">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Next</a>
        </li>
        <li class="page-item @if (Model.PageNumber == Model.TotalPages) { <text>disabled</text> }">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.TotalPages, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Last</a>
        </li>

    </ul>
</nav>


<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-end">

        <!-- First page link -->
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">First</a>
        </li>
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Previous</a>
        </li>

        <!-- Page links -->
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = i, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">@i</a>
            </li>
        }

        <!-- Next page link -->
        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Next</a>
        </li>
        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("IndexCards1", controllerName, new {pageNumber = Model.TotalPages, pageSize = Model.PageSize, sortOrder = Model.SortOrder, sortProperty = Model.SortProperty})">Last</a>
        </li>

    </ul>
</nav>


@* <nav aria-label="Page navigation example"> *@
@*     <ul class="pagination justify-content-end"> *@
@*         <li class="page-item disabled"> *@
@*             <a class="page-link">Previous</a> *@
@*         </li> *@
@*         <li class="page-item"> *@
@*             <a class="page-link" href="#">1</a> *@
@*         </li> *@
@*         <li class="page-item"> *@
@*             <a class="page-link" href="#">2</a> *@
@*         </li> *@
@*         <li class="page-item"> *@
@*             <a class="page-link" href="#">3</a> *@
@*         </li> *@
@*         <li class="page-item"> *@
@*             <a class="page-link" href="#">Next</a> *@
@*         </li> *@
@*     </ul> *@
@* </nav> *@


<script src="~/js/pagination.js" charset="utf-8"></script>

@* <script src="~/ts/pagination.ts" charset="utf-8"></script> *@