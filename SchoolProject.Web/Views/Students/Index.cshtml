@using System.Reflection
@model IEnumerable<SchoolProject.Web.Data.Entities.Students.Student>
@* @model PaginationViewModel<SchoolProject.Web.Data.Entities.Students.Student> *@

@{
    // ViewData["Title"] = "Index";
    // ViewData["Title"] = "Owners List";
    // ViewData["Title"] = @ViewContext.RouteData.Values["controller"] + " - " + @ViewContext.RouteData.Values["action"];
    ViewData["Title"] = ViewContext.RouteData.Values["controller"] + " List";

    var actionName = ViewContext.RouteData.Values["action"]?.ToString();
    var controllerName = ViewContext.RouteData.Values["controller"]?.ToString();
    var assemblyName = Assembly.GetExecutingAssembly().GetName().Name;

    // Isso obt√©m o nome da classe do modelo atual
    var deleteClassName = ViewData["CurrentClass"]?.ToString();
    var pageTitle = actionName + " - " + controllerName + " - " + assemblyName;
}

@* <h2>@pageTitle</h2> *@
<h2>@ViewData["Title"]</h2>

<div class="container-fluid py-3">
    <div class="row">
        @* <div class="col-md-4"> *@
        <div class="col">
            @* <a asp-action="Create" class="btn btn-secondary p-2"><span class="fa-regular fa-square-plus fa-xl p-1 pe-1"></span> Create New </a> *@
            <a asp-action="Create" class="btn btn-secondary p-2"><span class="fa-solid fa-circle-plus fa-xl p-1 pe-1"></span> Create New </a>
        </div>
        @if (string.Equals(actionName, "IndexCards1"))
        {
            @* <div class="col-md-8 justify-content-end"> *@
            <div class="col justify-content-end">
                <partial model="Model" name="Pagination/_PageNavigationTop"/>
            </div>
        }
    </div>
</div>

<table class="table table-hover" sortable="True" id="sortableTable">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.FirstName)</th>
        <th>@Html.DisplayNameFor(model => model.LastName)</th>
        <th>@Html.DisplayNameFor(model => model.Address)</th>
        <th>@Html.DisplayNameFor(model => model.PostalCode)</th>
        <th>@Html.DisplayNameFor(model => model.MobilePhone)</th>
        <th>@Html.DisplayNameFor(model => model.Email)</th>
        <th>@Html.DisplayNameFor(model => model.Active)</th>
        <th>@Html.DisplayNameFor(model => model.DateOfBirth)</th>
        <th>@Html.DisplayNameFor(model => model.IdentificationNumber)</th>
        <th>@Html.DisplayNameFor(model => model.IdentificationType)</th>
        <th>@Html.DisplayNameFor(model => model.ExpirationDateIdentificationNumber)</th>
        <th>@Html.DisplayNameFor(model => model.TaxIdentificationNumber)</th>
        <th>@Html.DisplayNameFor(model => model.EnrollDate)</th>
        <th>@Html.DisplayNameFor(model => model.ProfilePhotoId)</th>
        <th>@Html.DisplayNameFor(model => model.IdGuid)</th>
        <th>@Html.DisplayNameFor(model => model.WasDeleted)</th>
        <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
        <th>@Html.DisplayNameFor(model => model.UpdatedAt)</th>
        <th></th>
    </tr>
    </thead>

    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
            <td>@Html.DisplayFor(modelItem => item.LastName)</td>
            <td>@Html.DisplayFor(modelItem => item.Address)</td>
            <td>@Html.DisplayFor(modelItem => item.PostalCode)</td>
            <td>@Html.DisplayFor(modelItem => item.MobilePhone)</td>
            <td>@Html.DisplayFor(modelItem => item.Email)</td>
            <td>@Html.DisplayFor(modelItem => item.Active)</td>
            <td>@Html.DisplayFor(modelItem => item.DateOfBirth)</td>
            <td>@Html.DisplayFor(modelItem => item.IdentificationNumber)</td>
            <td>@Html.DisplayFor(modelItem => item.IdentificationType)</td>
            <td>@Html.DisplayFor(modelItem => item.ExpirationDateIdentificationNumber)</td>
            <td>@Html.DisplayFor(modelItem => item.TaxIdentificationNumber)</td>
            <td>@Html.DisplayFor(modelItem => item.EnrollDate)</td>
            <td>@Html.DisplayFor(modelItem => item.ProfilePhotoId)</td>
            <td>@Html.DisplayFor(modelItem => item.IdGuid)</td>
            <td>@Html.DisplayFor(modelItem => item.WasDeleted)</td>
            <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
            <td>@Html.DisplayFor(modelItem => item.UpdatedAt)</td>

            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning"> <span class="fa-regular fa-pen-to-square"></span> Edit </a>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info"> <span class="fa-regular fa-file"></span> Details </a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger" data-bs-target="#deleteButton" data-bs-toggle="modal" data-del-action="Delete" data-del-class="@deleteClassName" data-del-controller="@controllerName" data-del-item-id="@item.Id" data-del-item-name="@item.FullName" id="btnDelete" type="button"><span class="fa-regular fa-trash-can"></span> Delete </a>
            </td>
        </tr>
    }
    </tbody>

</table>