@inject RoleManager<IdentityRole> RoleManager
@inject UserManager<AppUser> UserManager

@using System.Reflection
@using Microsoft.AspNetCore.Identity
@using SchoolProject.Web.Data.Entities.Users
@using SchoolProject.Web.Controllers
@using SchoolProject.Web.Data.Entities.Disciplines
@using SchoolProject.Web.Data.Entities.Students
@model SchoolProject.Web.Data.Entities.Students.Student

@{
    // ViewData["Title"] = "Index";
    // ViewData["Title"] = "Owners List";
    // ViewData["Title"] = @ViewContext.RouteData.Values["controller"] + " - " + @ViewContext.RouteData.Values["action"];
    ViewData["Title"] = ViewContext.RouteData.Values["controller"] + " List";

    var actionName = ViewContext.RouteData.Values["action"]?.ToString() ?? string.Empty;
    var controllerName = ViewContext.RouteData.Values["controller"]?.ToString() ?? string.Empty;
    var assemblyName = Assembly.GetExecutingAssembly().GetName().Name ?? string.Empty;

    // Isso obtém o nome da classe do modelo atual
    var deleteClassName = ViewData["CurrentClass"]?.ToString() ?? string.Empty;
    var pageTitle = actionName + " - " + controllerName + " - " + assemblyName + " " + ViewData["vAssemblyVersion"];
}

<br/>
<h4>@DisciplinesController.ControllerName</h4>
@if (Model.Enrollments == null || Model.Disciplines == null || !Model.Disciplines.Any())
{
    <h5>No @nameof(Discipline) added yet to this @nameof(Student) @Model.FullName</h5>
}
else
{
    <table class="table table-hover" sortable="True" id="sortableTable1">
        <thead>
        <tr>
            @* <th>@Html.DisplayNameFor(model => model.Disciplines.FirstOrDefault().ProfilePhotoId)</th> *@
            <th>@Html.DisplayNameFor(model => model.Disciplines.FirstOrDefault().Code)</th>
            <th>@Html.DisplayNameFor(model => model.Disciplines.FirstOrDefault().Name)</th>
            @* <th>@Html.DisplayNameFor(model => model.Disciplines.FirstOrDefault().Description)</th> *@
            <th>@Html.DisplayNameFor(model => model.Disciplines.FirstOrDefault().Hours)</th>
            <th>@Html.DisplayNameFor(model => model.Disciplines.FirstOrDefault().CreditPoints)</th>

            <th>@Html.DisplayNameFor(model => model.Enrollments.FirstOrDefault().Grade)</th>
            <th>@Html.DisplayNameFor(model => model.Enrollments.FirstOrDefault().Absences)</th>
            <th>@Html.DisplayNameFor(model => model.Enrollments.FirstOrDefault().PercentageOfAbsences)</th>
            <th>@Html.DisplayNameFor(model => model.Enrollments.FirstOrDefault().FailedDueToAbsences)</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Enrollments.OrderBy(c => c.Discipline.Code))
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Discipline.Code)</td>
                <td>@Html.DisplayFor(modelItem => item.Discipline.Name)</td>
                @* <td>@Html.DisplayFor(modelItem => item.Discipline.Description)</td> *@
                <td>@Html.DisplayFor(modelItem => item.Discipline.Hours)</td>
                <td>@Html.DisplayFor(modelItem => item.Discipline.CreditPoints)</td>

                <td>@Html.DisplayFor(modelItem => item.Grade)</td>
                <td>@Html.DisplayFor(modelItem => item.Absences)</td>
                <td>@Html.DisplayFor(modelItem => item.PercentageOfAbsences)</td>
                <td>@Html.DisplayFor(modelItem => item.FailedDueToAbsences)</td>
                @* <td></td> *@
                <td>
                    <div class="btn-group" role="group" aria-label="Basic example">
                        <a asp-controller="Disciplines" asp-action="Edit" asp-route-id="@item.Discipline.Id" class="btn btn-warning"> <span class="fa-regular fa-pen-to-square"></span> Edit </a>
                        <a asp-controller="Disciplines" asp-action="Details" asp-route-id="@item.Discipline.Id" class="btn btn-info"> <span class="fa-regular fa-file"></span> Details </a>
                        <a asp-controller="Disciplines" asp-action="Delete" asp-route-id="@item.Discipline.Id" class="btn btn-outline-danger" data-bs-target="#deleteButton" data-bs-toggle="modal" data-del-action="Delete" data-del-class="@deleteClassName" data-del-controller="@controllerName" data-del-item-id="@item.Discipline.Id" data-del-item-name="@item.Discipline.Name" id="btnDelete" type="button"><span class="fa-regular fa-trash-can"></span> Delete </a>
                    </div>
                </td>
            </tr>
        }
        </tbody>
        <tfoot>
        <tr>
            <td></td>
            <td>Total Lines:</td>
            <td>@Model.Disciplines.Count()</td>
            <td>@Model.Disciplines.Sum(e => e.Hours).ToString("N0")</td>
            <td>@Model.Disciplines.Sum(e => e.CreditPoints).ToString("N")</td>
            <td></td>
        </tr>
        </tfoot>
    </table>
}