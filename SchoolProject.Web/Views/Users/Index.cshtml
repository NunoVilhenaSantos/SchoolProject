@using System.Reflection

@* @model IEnumerable<SchoolProject.Web.Data.Entities.Users.User> *@
@model IEnumerable<SchoolProject.Web.Models.Users.UserWithRolesViewModel>

@{
    // ViewData["Title"] = "Index";
    // ViewData["Title"] = "Owners List";
    // ViewData["Title"] = @ViewContext.RouteData.Values["controller"] + " - " + @ViewContext.RouteData.Values["action"];
    ViewData["Title"] = ViewContext.RouteData.Values["controller"] + " List";

    var actionName = ViewContext.RouteData.Values["action"]?.ToString();
    var controllerName = ViewContext.RouteData.Values["controller"]?.ToString();
    var assemblyName = Assembly.GetExecutingAssembly().GetName().Name;

    // Isso obtÃ©m o nome da classe do modelo atual
    // var modelName = Model.GetModelName(m => m);
    var deleteClassName = ViewData["CurrentClass"]?.ToString();

    var pageTitle = actionName + " - " + controllerName + " - " + assemblyName;
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create" class="btn btn-secondary p-2"><span class="fa-regular fa-square-plus fa-xl p-1 pe-1"></span> Create New </a>
    @* <a asp-action="Create" class="btn btn-secondary p-2"><span class="fa-solid fa-circle-plus fa-xl p-1 pe-1"></span> Create New </a> *@
</p>


<table class="table table-hover" sortable="True" id="sortableTable">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.User.ProfilePhotoId)</th>
        <th>@Html.DisplayNameFor(model => model.User.FirstName)</th>
        <th>@Html.DisplayNameFor(model => model.User.LastName)</th>
        <th>@Html.DisplayNameFor(model => model.User.Address)</th>
        <th>@Html.DisplayNameFor(model => model.User.WasDeleted)</th>
        <th>@Html.DisplayNameFor(model => model.User.UserName)</th>
        @* <th>@Html.DisplayNameFor(model => model.User.NormalizedUserName)</th> *@
        <th>@Html.DisplayNameFor(model => model.User.Email) </th>
        @* <th>@Html.DisplayNameFor(model => model.User.NormalizedEmail)</th> *@
        <th>@Html.DisplayNameFor(model => model.User.EmailConfirmed)</th>
        @* <th>@Html.DisplayNameFor(model => model.User.PasswordHash)</th> *@
        @* <th>@Html.DisplayNameFor(model => model.User.SecurityStamp)</th> *@
        @* <th>@Html.DisplayNameFor(model => model.User.ConcurrencyStamp)</th> *@
        <th>@Html.DisplayNameFor(model => model.User.PhoneNumber)</th>
        <th>@Html.DisplayNameFor(model => model.User.PhoneNumberConfirmed)</th>
        <th>@Html.DisplayNameFor(model => model.User.TwoFactorEnabled)</th>
        <th>@Html.DisplayNameFor(model => model.User.LockoutEnd)</th>
        <th>@Html.DisplayNameFor(model => model.User.LockoutEnabled)</th>
        <th>@Html.DisplayNameFor(model => model.User.AccessFailedCount)</th>
        @* <th>@Html.DisplayNameFor(model => model.Role.RoleId)</th> *@
        <th>@Html.DisplayNameFor(model => model.Role)</th>
        <th>@Html.DisplayNameFor(model => model.RoleName)</th>
        <th>@Html.DisplayNameFor(model => model.Roles)</th>
        <th></th>
    </tr>
    </thead>

    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            @* <td>@Html.DisplayFor(modelItem => item.ProfilePhotoId)</td> *@
            <td>
                <img alt="Image" class="img-thumbnail" height="150"
                     src="@Url.Content(item.User.ProfilePhotoIdUrl)" width="auto"/>
            </td>
            <td>@Html.DisplayFor(modelItem => item.User.FirstName)</td>
            <td>@Html.DisplayFor(modelItem => item.User.LastName)</td>
            <td>@Html.DisplayFor(modelItem => item.User.Address)</td>
            <td>@Html.DisplayFor(modelItem => item.User.WasDeleted)</td>

            <td>@Html.DisplayFor(modelItem => item.User.UserName)</td>
            @* <td>@Html.DisplayFor(modelItem => item.User.NormalizedUserName)</td> *@
            <td>@Html.DisplayFor(modelItem => item.User.Email)</td>
            @* <td>@Html.DisplayFor(modelItem => item.User.NormalizedEmail)</td> *@
            <td>@Html.DisplayFor(modelItem => item.User.EmailConfirmed)</td>
            @* <td>@Html.DisplayFor(modelItem => item.User.PasswordHash)</td> *@
            @* <td>@Html.DisplayFor(modelItem => item.User.SecurityStamp)</td> *@
            @* <td>@Html.DisplayFor(modelItem => item.User.ConcurrencyStamp)</td> *@
            <td>@Html.DisplayFor(modelItem => item.User.PhoneNumber)</td>
            <td>@Html.DisplayFor(modelItem => item.User.PhoneNumberConfirmed)</td>
            <td>@Html.DisplayFor(modelItem => item.User.TwoFactorEnabled)</td>
            <td>@Html.DisplayFor(modelItem => item.User.LockoutEnd)</td>
            <td>@Html.DisplayFor(modelItem => item.User.LockoutEnabled)</td>
            <td>@Html.DisplayFor(modelItem => item.User.AccessFailedCount)</td>
            @* <td>@Html.DisplayFor(modelItem => item.Role.RoleId)</td> *@
            <td>@Html.DisplayFor(modelItem => item.Role)</td>
            <td>@Html.DisplayFor(modelItem => item.RoleName)</td>
            <td>@Html.DisplayFor(modelItem => item.Roles)</td>

            <td>
                <div class="btn-group">
                    <a asp-action="Edit" asp-route-id="@item.User.Id" class="btn btn-outline-warning"> <span class="fa-regular fa-pen-to-square"></span> Edit</a>
                    <a asp-action="Details" asp-route-id="@item.User.Id" class="btn btn-outline-info"> <span class="fa-regular fa-file"></span> Details</a>
                    @* <a asp-action="Delete" asp-route-id="@item.User.Id" class="btn btn-outline-danger"><span class="fa-regular fa-trash-can"></span> Delete</a> *@
                    <a asp-action="Delete" asp-route-id="@item.User.Id" class="btn btn-outline-danger" data-bs-target="#deleteButton" data-bs-toggle="modal" data-del-action="Delete" data-del-class="@deleteClassName" data-del-controller="@controllerName" data-del-item-id="@item.User.Id" data-del-item-name="@item.User.FullName" id="btnDelete" type="button"><span class="fa-regular fa-trash-can"></span> Delete </a>
                </div>
            </td>
        </tr>
    }
    </tbody>

</table>